name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'gateway-service/**'
  pull_request:
    branches:
      - main
    paths:
      - 'gateway-service/**'
  workflow_dispatch:

jobs:
  gateway-service-build:
    # This job runs only if the commit message contains 'gateway-service'
    if: "contains(github.event.head_commit.message, 'gateway-service')"
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment for gateway-service
      - name: Set up Python for gateway-service
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Specify the Python version to use

      # Step 3: Install the required dependencies
      - name: Install dependencies for gateway-service
        working-directory: gateway-service  # Ensure we are in the correct directory
        run: |
          python -m pip install --upgrade pip  # Upgrade pip to the latest version
          pip install -r requirements.txt  # Install the dependencies listed in requirements.txt

      # Step 4: Log in to Docker Hub using secrets for authentication
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored in secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored in secrets

      # Step 5: Build the Docker image for the gateway-service
      - name: Build Docker image
        working-directory: gateway-service  # Specify working directory for Dockerfile
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/autochoice/gateway-svc:latest

      # Step 6: Tag the Docker image for versioning
      - name: Tag Docker image
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/autochoice/gateway-svc:latest ${{ secrets.DOCKER_USERNAME }}/autochoice:latest

      # Step 7: Push the tagged Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/autochoice:latest
