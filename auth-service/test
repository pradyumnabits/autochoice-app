from passlib.context import CryptContext
from jose import JWTError, jwt
from datetime import datetime, timedelta
from sqlalchemy.orm import Session
from models import User
from database import get_db

# Secret key for JWT
SECRET_KEY = "a_secret_key"
ALGORITHM = "HS256"

# Password hashing context
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

# Authenticate user
def authenticate_user(username: str, password: str, db: Session):
    user = db.query(User).filter(User.username == username).first()
    if not user or not pwd_context.verify(password, user.hashed_password):
        return False
    return user

# Create JWT token
def create_access_token(data: dict, expires_delta: timedelta = None):
    to_encode = data.copy()
    if expires_delta:
        expire = datetime.utcnow() + expires_delta
    else:
        expire = datetime.utcnow() + timedelta(minutes=15)
    to_encode.update({"exp": expire})
    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)
    return encoded_jwt


#######################

from sqlalchemy import create_engine, Column, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

# SQLite database URL
SQLALCHEMY_DATABASE_URL = "sqlite:///./test.db"
#SQLALCHEMY_DATABASE_URL = "postgresql://user:password@localhost/dbname"

# Create the SQLite engine
engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={"check_same_thread": False})

# Create session factory
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Base class for models
Base = declarative_base()

# Create the User model for the database
class UserInDB(Base):
    __tablename__ = "users"

    username = Column(String, primary_key=True, index=True)
    hashed_password = Column(String)
    email = Column(String)

# Create the database tables
def create_db():
    Base.metadata.create_all(bind=engine)

# Dependency to get the database session
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

#####################

â‡’  curl -X 'POST' \
  'http://localhost:8001/auth/register' \
  -H 'Content-Type: application/json' \
  -d '{
  "username": "test_user",
  "password": "test_password",
  "email": "test_user@example.com"
}'
Internal Server Error%

#########################

INFO:     Application startup complete.
INFO:     127.0.0.1:53535 - "POST /auth/register HTTP/1.1" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/uvicorn/protocols/http/h11_impl.py", line 408, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/uvicorn/middleware/proxy_headers.py", line 84, in __call__
    return await self.app(scope, receive, send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/fastapi/applications.py", line 292, in __call__
    await super().__call__(scope, receive, send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/applications.py", line 122, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/fastapi/routing.py", line 273, in app
    raw_response = await run_endpoint_function(
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/fastapi/routing.py", line 192, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/starlette/concurrency.py", line 41, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/anyio/to_thread.py", line 33, in run_sync
    return await get_asynclib().run_sync_in_worker_thread(
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/anyio/_backends/_asyncio.py", line 877, in run_sync_in_worker_thread
    return await future
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/anyio/_backends/_asyncio.py", line 807, in run
    result = context.run(func, *args)
  File "/Users/pradyumna/Downloads/dev/auto-choice/auth-service/auth-service.py", line 26, in register_user
    db_user = db.query(User).filter(User.username == user.username).first()
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/orm/session.py", line 2952, in query
    return self._query_cls(entities, self, **kwargs)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 275, in __init__
    self._set_entities(entities)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 287, in _set_entities
    self._raw_columns = [
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 288, in <listcomp>
    coercions.expect(
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/sql/coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/sql/coercions.py", line 635, in _literal_coercion
    self._raise_for_expected(element, argname)
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/sql/coercions.py", line 1134, in _raise_for_expected
    return super()._raise_for_expected(
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/sql/coercions.py", line 696, in _raise_for_expected
    super()._raise_for_expected(
  File "/Users/pradyumna/.pyenv/versions/3.9.0/lib/python3.9/site-packages/sqlalchemy/sql/coercions.py", line 519, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: Column expression, FROM clause, or other columns clause element expected, got <class 'models.User'>.


